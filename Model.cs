// Copyright 2021 Google Inc. All Rights Reserved.
// 
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// 
//     http://www.apache.org/licenses/LICENSE-2.0
// 
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using System;
using System.Collections.Generic;

namespace SpannerEFCoreTutorial
{
    public class SpannerTutorialContext : DbContext
    {
        private readonly string _connectionString;

        public SpannerTutorialContext(string connectionString)
        {
            _connectionString = connectionString;
        }

        public virtual DbSet<Singer> Singers { get; set; }
        public virtual DbSet<Album> Albums { get; set; }
        public virtual DbSet<Track> Tracks { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder options)
            // Configure Entity Framework to use a Cloud Spanner database.
            => options.UseSpanner(_connectionString);

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Singer>(entity =>
            {
                // FullName is generated by Cloud Spanner on each add or update.
                entity.Property(e => e.FullName).ValueGeneratedOnAddOrUpdate();
            });

            modelBuilder.Entity<Track>(entity =>
            {
                // Track is INTERLEAVED IN PARENT Album.
                entity
                    .InterleaveInParent(typeof(Album), OnDelete.Cascade)
                    .HasKey(entity => new { entity.AlbumId, entity.TrackId });
            });
        }
    }

    public class Singer
    {
        public Singer()
        {
            Albums = new HashSet<Album>();
        }

        public Guid SingerId { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        // FullName is generated automatically from FirstName and LastName.
        public string FullName { get; set; }

        public virtual ICollection<Album> Albums { get; set; }
    }

    public class Album
    {
        public Album()
        {
            Tracks = new HashSet<Track>();
        }

        public Guid AlbumId { get; set; }
        public string Title { get; set; }
        public virtual Singer Singer { get; set; }

        public virtual ICollection<Track> Tracks { get; set; }
    }

    public class Track
    {
        public Track()
        {
        }

        public Guid AlbumId { get; set; }
        public long TrackId { get; set; }
        public string Title { get; set; }

        public virtual Album Album { get; set; }
    }
}
